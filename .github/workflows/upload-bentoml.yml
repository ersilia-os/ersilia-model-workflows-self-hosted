name: Upload bentoml dockerized model

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      repo_name:
        required: true
        type: string
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_PASSWORD:
        required: true

jobs:
  build-bentoml-image-amd64:
    runs-on: self-hosted
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check if we can use this workflow
        run: |
          if [[ -f install.yml ]]; then
            echo "❌ This workflow is not supported for this repository"
            exit 1
          fi
      
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # - name: Free Disk Space (Ubuntu)
      #   uses: jlumbroso/free-disk-space@main
      #   with:
      #     tool-cache: true
      #     android: true
      #     dotnet: true
      #     haskell: true
      #     large-packages: true
      #     swap-storage: true

      - name: Setup Conda
        id: setupConda
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: "3.10.10"
          miniconda-version: "py312_24.1.2-0"  # Known good release

      - name: Disable .conda archive format
        run: conda config --set use_only_tar_bz2 true

      - name: Install dependencies in Conda environment
        id: installDependenciesInConda
        run: |
          conda install git-lfs -c conda-forge
          git-lfs install
          conda install gh -c conda-forge
          python -m pip install git+https://github.com/ersilia-os/ersilia.git

      - name: Generate the Dockerfile
        id: generateDockerfile
        env:
          REPO_NAME: ${{ inputs.repo_name }}
          VERSION: ${{ inputs.version }}
        run: |
          wget -O place_a_dockerfile_in_current_eos_repo.py https://raw.githubusercontent.com/ersilia-os/ersilia-model-workflows/main/.github/scripts/place_a_dockerfile_in_current_eos_repo.py
          python -m pip install requests
          python place_a_dockerfile_in_current_eos_repo.py $REPO_NAME $VERSION
          rm place_a_dockerfile_in_current_eos_repo.py

      - name: Build and push AMD64
        id: build_amd64
        uses: docker/build-push-action@v6.7.0
        timeout-minutes: 60
        with:
          context: .
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ersiliaos/${{ inputs.repo_name }}:dev-amd64

  build-bentoml-image-arm64:
    runs-on: default-linux-arm64
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check if we can use this workflow
        run: |
          if [[ -f install.yml ]]; then
            echo "❌ This workflow is not supported for this repository"
            exit 1
          fi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # - name: Free Disk Space (Ubuntu)
      #   uses: jlumbroso/free-disk-space@main
      #   with:
      #     tool-cache: true
      #     android: true
      #     dotnet: true
      #     haskell: true
      #     large-packages: true
      #     swap-storage: true

      - name: Setup Conda
        id: setupConda
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: "3.10.10"
          miniconda-version: "py312_24.1.2-0"  # Known good release

      - name: Disable .conda archive format
        run: conda config --set use_only_tar_bz2 true

      - name: Install dependencies in Conda environment
        id: installDependenciesInConda
        run: |
          conda install git-lfs -c conda-forge
          git-lfs install
          conda install gh -c conda-forge
          python -m pip install git+https://github.com/ersilia-os/ersilia.git

      - name: Generate the Dockerfile
        id: generateDockerfile
        env:
          REPO_NAME: ${{ inputs.repo_name }}
          VERSION: ${{ inputs.version }}
        run: |
          wget -O place_a_dockerfile_in_current_eos_repo.py https://raw.githubusercontent.com/ersilia-os/ersilia-model-workflows/main/.github/scripts/place_a_dockerfile_in_current_eos_repo.py
          python -m pip install requests
          python place_a_dockerfile_in_current_eos_repo.py $REPO_NAME $VERSION
          rm place_a_dockerfile_in_current_eos_repo.py

      - name: Build and push ARM64
        id: build_amd64
        uses: docker/build-push-action@v6.7.0
        timeout-minutes: 60
        with:
          context: .
          platforms: linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ersiliaos/${{ inputs.repo_name }}:dev-arm64
  
  merge-multiarch:
    needs: [build-bentoml-image-amd64, build-bentoml-image-arm64]
    runs-on: self-hosted
    if: ${{ needs.build-bentoml-image-amd64.result == 'success' || needs.build-bentoml-image-arm64.result == 'success' }}
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Create multi-arch manifest if both images created
        id: check_images
        if: ${{ needs.build-bentoml-image-amd64.result == 'success' && needs.build-bentoml-image-arm64.result == 'success' }}
        run: |
          docker buildx imagetools create \
            -t ersiliaos/${{ inputs.repo_name }}:dev \
            ersiliaos/${{ inputs.repo_name }}:dev-amd64 \
            ersiliaos/${{ inputs.repo_name }}:dev-arm64

      - name: Rename amd64 to dev if only amd64 exists
        if: ${{ needs.build-bentoml-image-amd64.result == 'success' && needs.build-bentoml-image-arm64.result == 'failure' }}
        run: |
          docker tag ersiliaos/${{ inputs.repo_name }}:dev-amd64 ersiliaos/${{ inputs.repo_name }}:dev
          docker push ersiliaos/${{ inputs.repo_name }}:dev

      - name: Rename arm64 to dev if only arm64 exists
        if: ${{ needs.build-bentoml-image-amd64.result == 'failure' && needs.build-bentoml-image-arm64.result == 'success' }}
        run: |
          docker tag ersiliaos/${{ inputs.repo_name }}:dev-arm64 ersiliaos/${{ inputs.repo_name }}:dev
          docker push ersiliaos/${{ inputs.repo_name }}:dev